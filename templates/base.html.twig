{# templates/base.html.twig #}
<!DOCTYPE html>
<html lang="fr" class="h-100">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}MangaBlog{% endblock %}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/tom-select@2.4.2/dist/css/tom-select.bootstrap5.min.css">

    {% block styles %}{% endblock %}

    {% if app.debug %}
        <style> footer { margin-bottom: 46px; } </style>
    {% endif %}
</head>

{# âœ… sticky footer : body en flex-col + h-100 #}
<body class="d-flex flex-column h-100 bg-light">

{# On stocke la route courante pour activer les boutons #}
{% set current = app.request.attributes.get('_route') %}

<nav class="navbar navbar-dark bg-dark">
    <div class="container d-flex justify-content-between align-items-center">
        <a class="navbar-brand fw-bold" href="{{ path('app_home') }}">MangaBlog</a>

        <div class="d-flex align-items-center gap-2">
            {# Accueil : actif si route = app_home #}
            <a class="btn btn-sm {{ current == 'app_home' ? 'btn-light' : 'btn-outline-light' }}"
               href="{{ path('app_home') }}">
                Accueil
            </a>

            {# Blog : actif si route commence par blog_ #}
            <a class="btn btn-sm {{ current starts with 'blog_' ? 'btn-light' : 'btn-outline-light' }}"
               href="{{ path('blog_index') }}">
                Blog
            </a>

            {% if app.user %}
                <span class="navbar-text small me-2">
          ConnectÃ© en tant que {{ app.user.userIdentifier }}
        </span>
                <a class="btn btn-outline-light btn-sm" href="{{ path('app_logout') }}">Se dÃ©connecter</a>
                <a href="{{ path('app_post_new') }}" class="btn btn-sm btn-warning ms-2">
                    + CrÃ©er un article
                </a>

                {% if is_granted('ROLE_ADMIN') %}
                    <div class="btn-group ms-2">
                        <a class="btn btn-outline-light btn-sm dropdown-toggle"
                           data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">
                            Back-office
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <a class="dropdown-item" href="{{ path('admin_dashboard') }}">Dashboard</a>
                            </li>
                            <li><hr class="dropdown-divider"></li>

                            <li><a class="dropdown-item" href="{{ path('app_post_index') }}">Articles</a></li>
                            <li><a class="dropdown-item" href="{{ path('app_category_index') }}">CatÃ©gories</a></li>
                            <li><a class="dropdown-item" href="{{ path('app_tag_index') }}">Tags</a></li>
                            <li><a class="dropdown-item" href="{{ path('app_comment_index') }}">Commentaires</a></li>
                        </ul>
                    </div>
                {% endif %}
            {% else %}
                <a class="btn btn-outline-light btn-sm" href="{{ path('app_register') }}">CrÃ©er un compte</a>
                <a class="btn btn-light btn-sm" href="{{ path('app_login') }}">Se connecter</a>
            {% endif %}
        </div>
    </div>
</nav>

{# âœ… main qui sâ€™Ã©tire : flex-grow-1 pousse le footer en bas #}
<main class="container py-4 flex-grow-1" role="main">
    {# Messages flash #}
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ label }} mb-3" role="alert">
                {{ message }}
            </div>
        {% endfor %}
    {% endfor %}

    {# Contenu des pages #}
    {% block body %}{% endblock %}
</main>

{# âœ… footer sticky en bas #}
<footer class="border-top py-3 text-center text-muted small mt-auto">
    Â© {{ 'now'|date('Y') }} MangaBlog â€” Symfony Â· Bootstrap
</footer>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/tom-select@2.4.2/dist/js/tom-select.complete.min.js"></script>


{# ðŸ‘‰ Un seul bloc scripts dans le parent (pas de parent()) #}
{% block scripts %}
    <script>
        // Auto-fermeture des flashs
        setTimeout(() => {
            document.querySelectorAll('.alert').forEach(a => a.remove());
        }, 4000);
    </script>

    <script>
        // PrÃ©visualisation cover (new + edit), compatible Turbo
        (function () {
            function setupCoverPreview() {
                const form = document.querySelector('form[name="post"]');
                if (!form) return;

                const input = form.querySelector('#post_cover, input[name="post[cover]"], input[name$="[cover]"]');
                if (!input) return;

                let img = form.querySelector('#coverPreview');
                if (!img) {
                    img = document.createElement('img');
                    img.id = 'coverPreview';
                    img.alt = "AperÃ§u de lâ€™image de couverture";
                    img.className = 'img-thumbnail d-none mt-2';
                    img.style.maxHeight = '220px';

                    const container = input.closest('.col-12, .mb-3, .form-group') || input.parentElement;
                    container.appendChild(img);
                }

                if (input.dataset.previewBound) { update(); return; }
                input.dataset.previewBound = '1';

                const isHttpUrl = (u) => /^https?:\/\//i.test(u);

                function update() {
                    const url = (input.value || '').trim();
                    if (isHttpUrl(url)) {
                        img.src = url;
                        img.classList.remove('d-none');
                    } else {
                        img.classList.add('d-none');
                        img.removeAttribute('src');
                    }
                }

                input.addEventListener('input', update, { passive: true });
                input.addEventListener('change', update);
                update();
            }

            document.addEventListener('DOMContentLoaded', setupCoverPreview);
            document.addEventListener('turbo:load', setupCoverPreview);
            if (document.readyState === 'interactive' || document.readyState === 'complete') {
                setupCoverPreview();
            }
        })();
    </script>
{% endblock %}
</body>
</html>
