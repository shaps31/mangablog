{# templates/base.html.twig #}
<!DOCTYPE html>
<html lang="fr" class="h-100">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}KamiManga{% endblock %}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    {# Bootstrap (CDN) #}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    {# Tom Select (CDN) #}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tom-select@2.4.2/dist/css/tom-select.bootstrap5.min.css">

    {# Google Font pour les titres #}
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&family=Oswald:wght@500;700&family=Dancing+Script:wght@700&display=swap" rel="stylesheet">
    {# Logo #}
    <link rel="icon" href="{{ asset('favicon.svg') }}" type="image/svg+xml">

    {% block meta %}
        <meta name="description" content="MangaBlog — actus, critiques et classements manga.">
               <meta property="og:description" content="Découvre, explore, partage le monde du manga.">
        <meta property="og:type" content="website">
        <link rel="canonical" href="{{ app.request.uri }}">
    {% endblock %}


    {# Ton CSS local #}
    <link rel="stylesheet" href="{{ asset('css/app.css') }}">

    {# Petites utilités et reveal — OK de les laisser ici #}
    <style>
        :root{ --mbg-radius:.75rem; }
        * { scroll-behavior:smooth; }
        .btn,.badge,.card,.page-link{ transition:all .2s ease; }

        .card{ border-radius:var(--mbg-radius); }
        .card:hover{ transform:translateY(-2px); box-shadow:0 .5rem 1.25rem rgba(0,0,0,.08); }
        @media (max-width:991.98px){ .card:hover{ transform:none; } }

        /* reveal */
        .reveal{ opacity:0; transform:translateY(16px); transition:opacity .55s ease, transform .55s ease; will-change:opacity,transform; }
        .reveal[data-animate="zoom"]{ transform:scale(.98); }
        .reveal.is-visible{ opacity:1; transform:none; }
        @media (prefers-reduced-motion:reduce){ .reveal{ opacity:1!important; transform:none!important; } }
    </style>

    {% block styles %}{% endblock %}
    {% if app.debug %}<style>footer{margin-bottom:46px}</style>{% endif %}
</head>
<body class="d-flex flex-column h-100 bg-light">
{% set current = app.request.attributes.get('_route') %}

<nav class="navbar navbar-dark bg-dark">
    <div class="container d-flex justify-content-between align-items-center">
        <a class="navbar-brand d-flex align-items-center gap-2" href="{{ path('app_home') }}">
            {# Icône #}
            {% include '_partials/logo_icon.svg.twig' %}
            <span class="fw-bold">KamiManga</span>
        </a>
        <div class="d-flex align-items-center gap-2">
            <a class="btn btn-sm {{ current == 'app_home' ? 'btn-light' : 'btn-outline-light' }}" href="{{ path('app_home') }}">Accueil</a>
            <a class="btn btn-sm {{ current starts with 'blog_' ? 'btn-light' : 'btn-outline-light' }}" href="{{ path('blog_index') }}">Blog</a>

            {% if app.user %}
                <div class="dropdown">
                    <a class="btn btn-light btn-sm d-flex align-items-center gap-2"
                       data-bs-toggle="dropdown" href="#" aria-expanded="false">
                        <img src="{{ app.user.avatarOrGravatar }}" alt=""
                             class="rounded-circle" width="28" height="28">
                        <span class="d-none d-md-inline">{{ app.user.displayName }}</span>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" href="{{ path('app_profile_show') }}">Mon profil</a></li>
                        <li><a class="dropdown-item" href="{{ path('app_profile_edit') }}">Modifier</a></li>
                        {% if is_granted('ROLE_AUTHOR') %}
                            <li><a class="dropdown-item" href="{{ path('app_post_new') }}">Écrire un article</a></li>
                        {% endif %}
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="{{ path('app_logout') }}">Se déconnecter</a></li>
                    </ul>
                </div>
            {% endif %}



        </div>
    </div>
</nav>

<main class="container py-4 flex-grow-1" role="main">
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ label }} mb-3" role="alert">{{ message }}</div>
        {% endfor %}
    {% endfor %}

    {% block body %}{% endblock %}
</main>

<footer class="border-top py-3 mt-auto">
    <div class="container small d-flex flex-column flex-md-row justify-content-between align-items-center gap-2">
        <div>© {{ 'now'|date('Y') }} KamiManga — Symfony · Bootstrap</div>

        <ul class="list-inline m-0">
            <li class="list-inline-item"><a href="{{ path('app_home') }}" class="text-decoration-none">Accueil</a></li>
            <li class="list-inline-item">·</li>
            <li class="list-inline-item"><a href="{{ path('blog_index') }}" class="text-decoration-none">Blog</a></li>
            {% if is_granted('ROLE_USER') %}
                <li class="list-inline-item">·</li>
                <li class="list-inline-item"><a href="{{ path('app_post_new') }}" class="text-decoration-none">Écrire</a></li>
            {% endif %}
        </ul>

        <div class="text-muted">Made with ❤️ by Shabadine</div>
    </div>
</footer>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/tom-select@2.4.2/dist/js/tom-select.complete.min.js"></script>

{% block scripts %}
    <script>
        setTimeout(() => { document.querySelectorAll('.alert').forEach(a => a.remove()); }, 4000);
    </script>

    <script>
        (function () {
            const form = document.querySelector('form[name="post"]');
            if (!form) return;
            const input = form.querySelector('#post_cover, input[name="post[cover]"], input[name$="[cover]"]');
            if (!input) return;

            let img = form.querySelector('#coverPreview');
            if (!img) {
                img = document.createElement('img');
                img.id = 'coverPreview';
                img.alt = "Aperçu de l’image de couverture";
                img.className = 'img-thumbnail d-none mt-2';
                img.style.maxHeight = '220px';
                (input.closest('.col-12, .mb-3, .form-group') || input.parentElement).appendChild(img);
            }

            const isHttpUrl = (u) => /^https?:\/\//i.test(u);
            const update = () => {
                const url = (input.value || '').trim();
                if (isHttpUrl(url)) { img.src = url; img.classList.remove('d-none'); }
                else { img.classList.add('d-none'); img.removeAttribute('src'); }
            };

            input.addEventListener('input', update, { passive:true });
            input.addEventListener('change', update);
            update();
        })();
    </script>
{% endblock %}

{# Ton JS applicatif local #}
<script defer src="{{ asset('js/app.js') }}"></script>

{# Animation reveal au scroll #}
<script>
    (function () {
        if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
            document.querySelectorAll('.reveal').forEach(el => el.classList.add('is-visible'));
            return;
        }
        const els = Array.from(document.querySelectorAll('.reveal'));
        if (!els.length) return;

        if (!('IntersectionObserver' in window)) {
            els.forEach(el => el.classList.add('is-visible'));
            return;
        }
        const io = new IntersectionObserver((entries, obs) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('is-visible');
                    obs.unobserve(entry.target);
                }
            });
        }, { threshold: 0.1, rootMargin: '0px 0px -10% 0px' });

        els.forEach((el, i) => {
            el.style.transitionDelay = (i * 60) + 'ms';
            io.observe(el);
        });
    })();
</script>
</body>
</html>
