{# templates/post/_form.html.twig #}
{{ form_start(form) }}

{# Ã©ventuelle erreur globale du formulaire #}
{% if form.vars.errors|length %}
    <div class="alert alert-danger mb-3">
        {{ form_errors(form) }}
    </div>
{% endif %}

<div class="row g-3">
    <div class="col-12">
        {{ form_row(form.title, {
            attr: { autofocus: true, placeholder: 'Titre de lâ€™article' }
        }) }}
    </div>

    {# ðŸ‘‰ le slug avec message dâ€™aide et erreurs automatiques #}
    <div class="col-12">
        {{ form_row(form.slug, {
            help: 'Laisse vide pour Ãªtre auto-gÃ©nÃ©rÃ© depuis le titre.'
        }) }}
    </div>

    <div class="col-12">
        {{ form_row(form.content, { attr: { rows: 10 } }) }}
    </div>

    <div class="col-md-4">
        {{ form_row(form.status) }}
    </div>
    <div class="col-md-4">
        {{ form_row(form.publishedAt) }}
    </div>
    <div class="col-md-4">
        {{ form_row(form.rating) }}
    </div>

    <div class="col-12">
        {# âœ… Champ cover avec aide mise Ã  jour #}
        {{ form_row(form.cover, {
            help: 'Colle une URL dâ€™image (ex: https://exemple.com/cover.jpg)'
        }) }}

        {# âœ… AperÃ§u visuel de la cover #}
        <div class="mt-2">
            <img id="coverPreview"
                 alt="AperÃ§u de lâ€™image de couverture"
                 class="img-thumbnail d-none"
                 style="max-height:220px"
                 loading="lazy">
        </div>
    </div>

    <div class="col-md-6">
        {{ form_row(form.category) }}
    </div>
    <div class="col-md-6">
        {{ form_row(form.tags) }}
    </div>
</div>

<button class="btn btn-primary mt-3">
    {{ button_label|default('Enregistrer') }}
</button>

{{ form_end(form) }}

{# âœ… Petit JS local : montre/masque lâ€™aperÃ§u selon lâ€™URL #}
{% block scripts %}
    {{ parent() }}
    <script>
        (function () {
            const input = document.getElementById('post_cover');
            const img   = document.getElementById('coverPreview');
            if (!input || !img) return;

            const isHttpUrl = (u) => /^https?:\/\/.+/i.test(u);

            function update() {
                const url = input.value.trim();
                if (isHttpUrl(url)) {
                    img.src = url;
                    img.classList.remove('d-none');
                } else {
                    img.classList.add('d-none');
                    img.removeAttribute('src');
                }
            }

            input.addEventListener('input', update);
            input.addEventListener('change', update);
            update(); // initial (utile en Ã©dition)
        })();
    </script>
{% endblock %}
